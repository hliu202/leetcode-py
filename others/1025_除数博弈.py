# 偶数获胜,奇数失败

# 通俗一点的解释
# 因为至少可以取1 ,所以最后决胜负的时候 就是谁取到1 就输了
# 拿到奇数时 : 只有一种选择 就是 减去 奇数 , 给出偶数 拿到偶数的时候: 有 2 中选择 1. 减去奇数返回奇数; 2.减去偶数 返回偶数 可见 拿到偶数的人 有能力选择保持另一个人 奇偶性 永远是 奇数
# 由于拿到1的人就输 所以 偶数能一直保持 另一个人是奇数 , 且值一定不停的在减少趋向于 1 所以 开始手里是偶数的人能赢

# ! 1. 奇数的因数是奇数
# ! 2. 奇数减奇数是偶数
# ! 3. 偶数减奇数是奇数
# 奇数的 因数, 是奇数, 导致结果必定是 偶数
# 偶数的 因数, 可以选奇数(至少可以取 1),  使得对方是奇数, 那么自己始终能保持偶数

class Solution:
    def divisorGame(self, N: int) -> bool:
        return N % 2 == 0
